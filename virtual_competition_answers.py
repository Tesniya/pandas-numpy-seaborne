# -*- coding: utf-8 -*-
"""Virtual competition 1 (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K-WkBUXPO7VdJzxHK7WcC7SFG4O4hNp5

Consider the following Python dictionary `data` and Python list `labels`:

``` python
data = {'animal': ['cat', 'cat', 'snake', 'dog', 'dog', 'cat', 'snake', 'cat', 'dog', 'dog'],
        'age': [2.5, 3, 0.5, np.nan, 5, 2, 4.5, np.nan, 7, 3],
        'visits': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
        'priority': ['yes', 'yes', 'no', 'yes', 'no', 'no', 'no', 'yes', 'no', 'no']}

labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
```

**1.** Create a DataFrame `df` from this dictionary `data` which has the index `labels`.
"""

import pandas as pd
import numpy as np
data = {
    'animal': ['cat', 'cat', 'snake', 'dog', 'dog', 'cat', 'snake', 'cat', 'dog', 'dog'],
    'age': [2.5, 3, 0.5, np.nan, 5, 2, 4.5, np.nan, 7, 3],
    'visits': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
    'priority': ['yes', 'yes', 'no', 'yes', 'no', 'no', 'no', 'yes', 'no', 'no']
}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df = pd.DataFrame(data, index=labels)
print(df)

"""**2.** Display a summary of the basic information about this DataFrame and its data (*hint: there is a single method that can be called on the DataFrame*)."""

df.info()

"""**3.** Return the first 3 rows of the DataFrame `df`."""

df.head(3)

"""**4.** Display the 'animal' and 'age' columns from the DataFrame `df`"""

df[['animal', 'age']]

"""**5.** Display the data in rows `[3, 4, 8]` *and* in columns `['animal', 'age']'"""

df.loc[['d', 'e', 'i'], ['animal', 'age']]

"""**6.** Select only the rows where the number of visits is greater than 3."""

print(df[df['visits'] > 2])

"""**7.** Select the rows where the age is missing, i.e. it is `NaN`."""

df[df['age'].isna()]

"""**8.** Select the rows where the animal is a cat *and* the age is less than 3."""

df[(df['animal'] == 'cat') & (df['age'] < 3)]

"""**9.** Select the rows where the age is between 2 and 4 (inclusive)"""

df[(df['age'] >= 2) & (df['age'] <= 4)]

"""**10.** Change the age in row 'f' to 1.5."""

df.loc['f', 'age'] = 1.5

"""**11.** Calculate the sum of all visits in `df` (i.e. the total number of visits)."""

df['visits'].sum()

"""**12.** Calculate the mean age for each different animal in `df`."""

df.groupby('animal')['age'].mean()

"""**13.** Append a new row 'k' to `df` with your choice of values for each column. Then delete that row to return the original DataFrame."""

df=df.drop(k)

"""**14.** Count the number of each type of animal in `df`."""

animal_counts = df['animal'].value_counts()
print(animal_counts)

"""**15.** Sort `df` first by the values in the 'age' in *decending* order, then by the value in the 'visits' column in *ascending* order (so row `i` should be first, and row `d` should be last)."""

df.sort_values(by=['age', 'visits'], ascending=[False, True])

"""**16.** The 'priority' column contains the values 'yes' and 'no'. Replace this column with a column of boolean values: 'yes' should be `True` and 'no' should be `False`."""



"""**17.** In the 'animal' column, change the 'snake' entries to 'python'."""

df['animal'].replace('snake', 'python')
print(df['animal'])

"""**18.** Load the ny-flights dataset to Python"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

ny_flights_df = pd.read_csv('/content/ny-flights.csv')
print(ny_flights_df)

"""**19.** Which airline ID is present maximum times in the dataset"""



"""**20.** Draw a plot between dep_delay and arr_delay"""

plt.figure(figsize=(10, 6))
sns.scatterplot(x='dep_delay', y='arr_delay', data=ny_flights_df)
plt.title('Depature Delay vs Arrival Delay')
plt.xlabel('Departure Delay (mins)')
plt.ylabel('Arrival Delay (mins)')
plt.show()